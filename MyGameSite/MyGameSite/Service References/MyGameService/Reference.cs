//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyGameSite.MyGameService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Game", Namespace="http://schemas.datacontract.org/2004/07/WcfTest")]
    [System.SerializableAttribute()]
    public partial class Game : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyGameService.IMyGameService")]
    public interface IMyGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyGameService/AddGame", ReplyAction="http://tempuri.org/IMyGameService/AddGameResponse")]
        void AddGame(MyGameSite.MyGameService.Game g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyGameService/AddGame", ReplyAction="http://tempuri.org/IMyGameService/AddGameResponse")]
        System.Threading.Tasks.Task AddGameAsync(MyGameSite.MyGameService.Game g);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyGameService/GetAllGames", ReplyAction="http://tempuri.org/IMyGameService/GetAllGamesResponse")]
        MyGameSite.MyGameService.Game[] GetAllGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyGameService/GetAllGames", ReplyAction="http://tempuri.org/IMyGameService/GetAllGamesResponse")]
        System.Threading.Tasks.Task<MyGameSite.MyGameService.Game[]> GetAllGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyGameService/GetGameByID", ReplyAction="http://tempuri.org/IMyGameService/GetGameByIDResponse")]
        MyGameSite.MyGameService.Game GetGameByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyGameService/GetGameByID", ReplyAction="http://tempuri.org/IMyGameService/GetGameByIDResponse")]
        System.Threading.Tasks.Task<MyGameSite.MyGameService.Game> GetGameByIDAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyGameServiceChannel : MyGameSite.MyGameService.IMyGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyGameServiceClient : System.ServiceModel.ClientBase<MyGameSite.MyGameService.IMyGameService>, MyGameSite.MyGameService.IMyGameService {
        
        public MyGameServiceClient() {
        }
        
        public MyGameServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyGameServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyGameServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyGameServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddGame(MyGameSite.MyGameService.Game g) {
            base.Channel.AddGame(g);
        }
        
        public System.Threading.Tasks.Task AddGameAsync(MyGameSite.MyGameService.Game g) {
            return base.Channel.AddGameAsync(g);
        }
        
        public MyGameSite.MyGameService.Game[] GetAllGames() {
            return base.Channel.GetAllGames();
        }
        
        public System.Threading.Tasks.Task<MyGameSite.MyGameService.Game[]> GetAllGamesAsync() {
            return base.Channel.GetAllGamesAsync();
        }
        
        public MyGameSite.MyGameService.Game GetGameByID(int id) {
            return base.Channel.GetGameByID(id);
        }
        
        public System.Threading.Tasks.Task<MyGameSite.MyGameService.Game> GetGameByIDAsync(int id) {
            return base.Channel.GetGameByIDAsync(id);
        }
    }
}
